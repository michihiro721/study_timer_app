<%= stylesheet_link_tag 'timers_show', media: 'all' %>

<div class="study-content">
  <h1 class="studying">学習中</h1>
  <br>

  <% if @timer.end_time.present? %>
    <p>今回の学習時間: <%= @timer.duration %></p>
  <% else %>
    <!-- <p>学習が終了したら<br>「タイマー終了」ボタンを押してください。</p> -->
    <p class="elapsed-time"><span id="elapsed-time">0秒</span></p>
    <br>
  <% end %>

  <!--<p>累計学習時間: <span id="total-duration"><%= Timer.formatted_total_duration %></span></p> -->
  <!--<p>スタンプ数: <%= Timer.stamps %></p> -->

  <% if @timer.end_time.nil? %>
    <%= button_to "学習終了", stop_timer_path(@timer), method: :patch, class: "stop-timer-button" %>
    <br>
  <% end %>
</div>

<!-- 雨のエフェクトを表示するための要素 -->
<div id="rain-container"></div>

<!-- 雨音の音声要素 -->
<audio id="rain-sound" loop>
  <source src="<%= asset_path 'rain-sound.mp3' %>" type="audio/mpeg">
  Your browser does not support the audio element.
</audio>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var startTime = new Date();
    var elapsedTimeElement = document.getElementById('elapsed-time');
    var rainSound = document.getElementById('rain-sound');

    function updateElapsedTime() {
      var now = new Date();
      var elapsedTime = Math.floor((now - startTime) / 1000);

      var hours = Math.floor(elapsedTime / 3600);
      var minutes = Math.floor((elapsedTime % 3600) / 60);
      var seconds = elapsedTime % 60;

      var formattedTime = hours + '時間' + minutes + '分' + seconds + '秒';
      elapsedTimeElement.textContent = formattedTime;

      // タイトルを更新
      var titleTime = '';
      if (hours > 0) {
        titleTime += hours + '時間';
      }
      if (minutes > 0 || hours > 0) {
        titleTime += minutes + '分';
      }
      titleTime += seconds + '秒';

      document.title = titleTime + ' | 感謝の学習タイマー';
    }

    setInterval(updateElapsedTime, 1000);

    // 雨のエフェクトを作成するスクリプト
    const rainContainer = document.getElementById('rain-container');
    const createRainDrop = () => {
      const rainDrop = document.createElement('div');
      rainDrop.className = 'rain-drop';
      rainDrop.style.left = `${Math.random() * 100}vw`;
      rainDrop.style.animationDuration = `${Math.random() * 0.5 + 0.5}s`;
      rainContainer.appendChild(rainDrop);
      setTimeout(() => {
        rainDrop.remove();
      }, 1000);
    };

    setInterval(createRainDrop, 100);

    // 雨音をシームレスにループ再生
    rainSound.addEventListener('timeupdate', function() {
      var buffer = 0.44; // 途切れを防ぐためのバッファ時間（秒）
      if (rainSound.currentTime > rainSound.duration - buffer) {
        rainSound.currentTime = 0;
        rainSound.play();
      }
    });

    rainSound.play();
  });
</script>
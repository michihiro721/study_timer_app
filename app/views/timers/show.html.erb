<%= stylesheet_link_tag 'timers_show', media: 'all' %>

<div class="study-content">
  <h1 class="studying">学習中</h1>
  <br>

  <% if @timer.end_time.present? %>
    <p>今回の学習時間: <%= @timer.duration %></p>
  <% else %>
    <p class="elapsed-time"><span id="elapsed-time">0秒</span></p>
    <br>
  <% end %>

  <% if @timer.end_time.nil? %>
    <%= button_to "学習終了", stop_timer_path(@timer), method: :patch, class: "stop-timer-button" %>
    <br>
  <% end %>
</div>

<!-- 録音したメッセージの音声要素 -->
<audio id="message1-female" src="<%= @message1_female %>" preload="auto"></audio>
<audio id="message2-female" src="<%= @message2_female %>" preload="auto"></audio>
<audio id="message1-male" src="<%= @message1_male %>" preload="auto"></audio>
<audio id="message2-male" src="<%= @message2_male %>" preload="auto"></audio>
<audio id="rain-sound" src="<%= @rain_sound %>" preload="auto" loop></audio>

<!-- 雨のエフェクトを表示するための要素 -->
<div id="rain-container"></div>

<!-- 雨音の音量調節用のスライダー -->
<div class="volume-control">
  <i id="volume-icon" class="fas fa-volume-up"></i>
  <input type="range" id="volume-slider" min="0" max="1" step="0.01" value="0.5" style="display: none;">
</div>

<!-- 音声メッセージの音量調節用のスライダー -->
<div class="message-volume-control message-volume-control-adjusted">
  <i id="message-volume-icon" class="fas fa-user"></i>
  <input type="range" id="message-volume-slider" min="0" max="1" step="0.01" value="0.5" style="display: none;">
</div>

<!-- 音声メッセージの選択 -->
<div class="message-selection">
  <label class="voice-female">
    <input type="radio" name="voice" value="female" checked> 女性の声
  </label>
  <label class="voice-male">
    <input type="radio" name="voice" value="male"> 男性の声
  </label>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var startTime = new Date();
    var elapsedTimeElement = document.getElementById('elapsed-time');
    var message1Female = document.getElementById('message1-female');
    var message2Female = document.getElementById('message2-female');
    var message1Male = document.getElementById('message1-male');
    var message2Male = document.getElementById('message2-male');
    var rainSound = document.getElementById('rain-sound');
    var volumeSlider = document.getElementById('volume-slider');
    var volumeIcon = document.getElementById('volume-icon');
    var messageVolumeSlider = document.getElementById('message-volume-slider');
    var messageVolumeIcon = document.getElementById('message-volume-icon');
    var isMessage1Playing = false;
    var lastElapsedTime = 0;
    var isTabActive = true;
    var selectedVoice = 'female';

    // 雨のエフェクトを追加する関数
    function createRainEffect() {
      var rainContainer = document.getElementById('rain-container');
      for (var i = 0; i < 100; i++) {
        var rainDrop = document.createElement('div');
        rainDrop.className = 'rain-drop';
        rainDrop.style.left = Math.random() * 100 + 'vw';
        rainDrop.style.animationDuration = Math.random() * 2 + 3 + 's';
        rainDrop.style.animationDelay = Math.random() * 5 + 's';
        rainContainer.appendChild(rainDrop);
      }
    }

    // 経過時間を更新する関数
    function updateElapsedTime() {
      var now = new Date();
      var elapsedTime = Math.floor((now - startTime) / 1000);

      var hours = Math.floor(elapsedTime / 3600);
      var minutes = Math.floor((elapsedTime % 3600) / 60);
      var seconds = elapsedTime % 60;

      var formattedTime = hours + '時間' + minutes + '分' + seconds + '秒';
      elapsedTimeElement.textContent = formattedTime;

      // メッセージの再生
      if (elapsedTime % 40 === 30 && !isMessage1Playing) {
        if (selectedVoice === 'female') {
          message1Female.play();
        } else {
          message1Male.play();
        }
        isMessage1Playing = true;
      } else if (elapsedTime % 40 === 0 && isMessage1Playing) { // 30秒後にメッセージ1、次に10秒後にメッセージ2を再生
        if (selectedVoice === 'female') {
          message2Female.play();
        } else {
          message2Male.play();
        }
        isMessage1Playing = false;
      }

      lastElapsedTime = elapsedTime;
    }

    // タイトルの時間を更新する関数
    function updateTitleTime() {
      var now = new Date();
      var elapsedTime = Math.floor((now - startTime) / 1000);

      var hours = Math.floor(elapsedTime / 3600);
      var minutes = Math.floor((elapsedTime % 3600) / 60);
      var seconds = elapsedTime % 60;

      var titleTime = '';
      if (hours > 0) {
        titleTime += hours + '時間';
      }
      if (minutes > 0 || hours > 0) {
        titleTime += minutes + '分';
      }
      titleTime += seconds + '秒';

      document.title = titleTime + ' | 感謝の学習タイマー';
    }

    // タイマーの更新を `requestAnimationFrame` で行う
    function startTimer() {
      if (isTabActive) {
        updateElapsedTime();
      }
      requestAnimationFrame(startTimer);
    }

    // 10秒ごとにタイトルを更新
    setInterval(updateTitleTime, 10000);

    // 雨音を再生
    rainSound.play();

    // 音量スライダーの表示/非表示を切り替える関数
    volumeIcon.addEventListener('click', function() {
      volumeSlider.style.display = volumeSlider.style.display === 'none' ? 'block' : 'none';
    });

    // 音量を調整する関数
    volumeSlider.addEventListener('input', function() {
      rainSound.volume = volumeSlider.value;
      updateVolumeIcon();
    });

    // 音量に応じてアイコンを変更する関数
    function updateVolumeIcon() {
      if (rainSound.volume === 0) {
        volumeIcon.className = 'fas fa-volume-mute';
      } else if (rainSound.volume <= 0.5) {
        volumeIcon.className = 'fas fa-volume-down';
      } else {
        volumeIcon.className = 'fas fa-volume-up';
      }
    }

    // 初期アイコンの設定
    updateVolumeIcon();

    // 音声メッセージの音量スライダーの表示/非表示を切り替える関数
    messageVolumeIcon.addEventListener('click', function() {
      messageVolumeSlider.style.display = messageVolumeSlider.style.display === 'none' ? 'block' : 'none';
    });

    // 音声メッセージの音量を調整する関数
    messageVolumeSlider.addEventListener('input', function() {
      if (selectedVoice === 'female') {
        message1Female.volume = messageVolumeSlider.value;
        message2Female.volume = messageVolumeSlider.value;
      } else {
        message1Male.volume = messageVolumeSlider.value;
        message2Male.volume = messageVolumeSlider.value;
      }
      updateMessageVolumeIcon();
    });

    // 音量に応じてアイコンを変更する関数
    function updateMessageVolumeIcon() {
      if ((selectedVoice === 'female' && message1Female.volume === 0 && message2Female.volume === 0) ||
          (selectedVoice === 'male' && message1Male.volume === 0 && message2Male.volume === 0)) {
        messageVolumeIcon.className = 'fas fa-volume-mute'; // 消音アイコンに変更
      } else {
        messageVolumeIcon.className = 'fas fa-user'; // 元のアイコンに戻す
      }
    }

    // 初期アイコンの設定
    updateMessageVolumeIcon();

    // タブの可視性が変更されたときの処理
    document.addEventListener('visibilitychange', function() {
      isTabActive = document.visibilityState === 'visible';
      if (isTabActive) {
        startTime = new Date() - lastElapsedTime * 1000;
      }
    });

    // タブが非アクティブなときでも音声メッセージを再生するための処理
    setInterval(function() {
      if (!isTabActive) {
        updateElapsedTime();
      }
    }, 1000);

    // 音声メッセージの選択を変更する関数
    document.querySelectorAll('input[name="voice"]').forEach(function(radio) {
      radio.addEventListener('change', function() {
        selectedVoice = this.value;
      });
    });

    // 雨のエフェクトを作成
    createRainEffect();

    // タイマーを開始
    startTimer();
  });
</script>